% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_agegroup.R
\name{get_agegroup}
\alias{get_agegroup}
\alias{get_agegroup_seq}
\title{Create age groups}
\usage{
get_agegroup(
  x,
  breaks = c(seq(0, 90, by = 5), Inf),
  include_zero = TRUE,
  include_inf = TRUE,
  as_factor = TRUE,
  sep = "-",
  above.char = "+"
)

get_agegroup_seq(x, from = 0, to = 90, by = 5, ...)
}
\arguments{
\item{x}{a vector of numeric values}

\item{breaks}{a vector of numeric values to be used as breakpoints. These are
sorted before use by the function. The defualt value is the agegroups of the
\href{https://www.opendata.nhs.scot/dataset/standard-populations/resource/edee9731-daf7-4e0d-b525-e4c1469b8f69}{European Standard Population}.}

\item{include_zero}{If \code{TRUE}, zero will be appended to the start of the
breakpoints (unless it is already included). If \code{FALSE}, the function
will return \code{NA} for any value less than the smallest breakpoint.}

\item{include_inf}{If \code{TRUE}, \code{Inf} will be appended to the end of
the breakpoints (unless it is already included). If \code{FALSE}, the
function return \code{NA} for any value greater than or equal to the
largest breakpoint.}

\item{as_factor}{The default behaviour is to return a factor vector. Use
\code{FALSE} to return a character vector instead.}

\item{sep}{a character string to seperate the start and end year in each age
group label. Not \code{\link[base]{NA_character_}}.}

\item{above.char}{a character string to append to the final (top) age group
if it extends to infinity.}

\item{from, to, by}{start, end and increment values for a sequence of age
breaks. These are passed to \code{\link[base]{seq}} to generate the breaks.}

\item{...}{further arguments passed to \code{get_agegroup()}}
}
\value{
A factor vector, where each element corresponds to the same element
  in \code{x}. If \code{as_factor = FALSE} a character vector is returned
  instead.
}
\description{
A wrapper for \code{\link[base]{cut}} tailored for creating age groups. For
each value of integer \code{x}, what age group does it fall into, based on a
given set of age group breakpoints.
}
\details{
The breakpoints are used to create distinct contiguous age groups which cover
the whole range between the smallest and largest points (or zero and
\code{Inf} depending on which options are used).

\code{get_agegroup_seq} provides an alternative way of specifing the age
groupings using \code{\link[base]{seq}} arguments.
}
\note{
Only contiguous age groups can be created with a single call of
\code{get_agegroup}. To create overlapping age groups (e.g. 65+ and 75+) or
age groups with gaps (e.g. 0-17, 65+, but nothing in between) it will be
necessary to do some additional work or use additional calls of this
function.
}
\examples{
age <- c(54, 7, 77, 1, 26, 58, 46, 79, 31, 85, 13, 101)
get_agegroup(age)

get_agegroup(age, c(5, 15, 25, 45, 65, 75, 85))

#Other functions can be used to specify the breaks,
#e.g. \code\link[base]{seq}:
get_agegroup(age, seq(0, 100, by = 10))

#If \code{include_zero} or \code{include_inf} are set to \code{FALSE}, values
#outside of the range will return \code{NA}:
get_agegroup(age, c(5, 15, 25, 45, 65, 75, 85), include_zero = FALSE)

#To get the output as a vector of character:
get_agegroup(age, as_factor = FALSE)

#There is an additional method to use \code{seq}-like parameters
get_agegroup_seq(age, from=0, to=90, by=10)
}
